#!/usr/bin/env bash

help() {
    echo "Usage: $0 create app_name"
    echo "       $0 run"
    echo "actions:"
    echo "  create <app_name>   create a new application"
    echo "  run                 run server (in background)"
    echo "  stop                stop background running server"
    echo "  run-dev             run server in DEBUG mode"
}

action=$1; shift
case $action in
    help) help; exit 0;;

    create)
        [[ -z "$1" ]] && echo "Missing application name" && help && exit 1;
        app_name=$1; shift;;

    run|start);;
    stop);;
    run-dev|run-debug);;

    *)
        echo "Unknown action '$1'"
        help
        exit 1
esac 

create_app() {
    if [[ -e "$app_name" ]]; then
        echo "Can't create directory '$app_name'"; exit 1; fi

    mkdir -p "$app_name"
    cd "$app_name"
    mkdir loaders views spec logs
    cat > app.lua <<EOF
local app = require'lmwf.Application'('$app_name')
app:GET('/', "Welcome to $app_name !")

return app
EOF

    cat > lmwf.conf <<EOF
{
    host = 'localhost',
    port = 8080,
    app = 'app',
    views = 'views',
    loaders = 'loaders',
}
EOF
}

run_server() {
    if [[ -f logs/pid ]]; then
        pid=$(cat logs/pid)
        if kill -0 $pid >/dev/null 2>&1; then
            echo "Server is already running"
            exit 1
        fi
    fi
    lemwaf_ctl --quiet "$@" &
    local pid=$!
    #disown $pid
    echo "$pid" > logs/pid
}
stop_server() {
    local pid=$(cat logs/pid 2>/dev/null)
    [[ -n "$pid" ]] && kill -5 $pid; rm -f logs/pid
}
run_server_debug() {
    lemwaf_ctl --debug "$@"
}

case $action in
    create) create_app;;
    run|start) run_server "$@";;
    stop) stop_server;;
    run-dev|run-debug) run_server_debug "$@";;
esac
